<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Zhiyuan Chen</title><description>The website of Zhiyuan Chen</description><link>https://zyc.ai/</link><atom:link href="https://zyc.ai/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><managingEditor>Zhiyuan Chen</managingEditor><docs>https://github.com/ZhiyuanChen</docs><language>zh</language> <pubDate>Sun, 28 Apr 2024 17:14:23 -0000</pubDate> <lastBuildDate>Sun, 28 Apr 2024 17:14:23 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.12.1</generator> <item> <title>Zhiyuan Chen</title> <author>zyc</author> <description>&lt;p&gt;G&#39; day mate, how are you doing?&lt;/p&gt;&lt;p&gt;My name is Zhiyuan (pronounces as ˈʤ-jʊˈɑːn).I am a MPhil student in the joint program of the HKU-MMLab and the Shanghai AI...&lt;/p&gt;</description><link>https://zyc.ai/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/</guid> </item> <item> <title>许可</title> <author>zyc</author> <category>About</category> <category>License</category> <category>License</category> <description>&lt;h1&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/h1&gt;&lt;p&gt;Version 3, 19 November 2007&lt;/p&gt;&lt;p&gt;Copyright (C) 2007 Free Software Foundation, Inc.&lt;a href=&#34;https://fsf.org/&#34;&gt;https://fsf.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Everyone is permitted...&lt;/p&gt;</description><link>https://zyc.ai/license/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/license/</guid> </item> <item> <title>遗书</title> <author>zyc</author> <category>Posthumous</category> <category>Posthumous</category> <description>&lt;p&gt;!!! info &#34;最后修订&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;本遗书最后修订于2021年11月17日。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;!!! error &#34;警告&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;当且仅当在我死后，本页面才被许可使用（包括但不限于访问、阅读、复制、分发、修改、再创作）。其他情况下的任何使用都是不被允许的，继续使用将导致您所获得的任何授权被撤销。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本遗书阐述了我的想...&lt;/p&gt;</description><link>https://zyc.ai/posthumous/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/posthumous/</guid> </item> <item> <title>评论政策</title> <author>zyc</author> <category>About</category> <category>About</category> <category>Comment</category> <category>Policy</category> <category>Policy</category> <description>&lt;h1&gt;评论政策&lt;/h1&gt;&lt;p&gt;!!! info &#34;最后修订&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;本政策最后修订于2020年08月16日。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;!!! error &#34;&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;您的评论对于我们非常重要。我们相信，言论自由带来的思维碰撞将世界引上一个又一个新的高度。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本评论政策（以下简称本政策）阐述了您（个人或实体）与我们（Zhiyuan...&lt;/p&gt;</description><link>https://zyc.ai/about/comment/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/comment/</guid> </item> <item> <title>贡献</title> <author>zyc</author> <category>About</category> <category>About</category> <category>Contribute</category> <category>Contribute</category> <description>&lt;h1&gt;贡献&lt;/h1&gt;&lt;p&gt;在你做出任何贡献之前，我们强烈建议你先阅读这篇文章，确保你了解格式信息并掌握MkDocs的语法。&lt;/p&gt;&lt;h2&gt;语法&lt;/h2&gt;&lt;h3&gt;特殊语法&lt;/h3&gt;&lt;h4&gt;代码&lt;/h4&gt;&lt;p&gt;代码块应当显示使用` `和&lt;/p&gt;&lt;p&gt;```&lt;/p&gt;&lt;p&gt;```&lt;/p&gt;&lt;p&gt;进行指定。&lt;/p&gt;&lt;p&gt;除非特殊情况，应当注明使用的语言以使代码着色器正常工作。&lt;/p&gt;&lt;h4&gt;...&lt;/h4&gt;</description><link>https://zyc.ai/about/contribute/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/contribute/</guid> </item> <item> <title>捐赠</title> <author>zyc</author> <category>About</category> <category>About</category> <category>Donate</category> <category>Donate</category> <description>&lt;h1&gt;捐赠&lt;/h1&gt;&lt;p&gt;我们很高兴如果您认为这个网站是有帮助的。&amp;nbsp;&lt;/p&gt;&lt;p&gt;知识应当是自由的，任何形式的捐赠都玷污了知识的神圣性。&lt;/p&gt;&lt;p&gt;但是，为开源软件捐款不会。&lt;/p&gt;&lt;p&gt;您可以向&lt;a href=&#34;https://www.apache.org/foundation/contributing.html&#34;&gt;Apache基金会&lt;/a&gt;或者[自由软件基金会...&lt;/p&gt;</description><link>https://zyc.ai/about/donate/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/donate/</guid> </item> <item> <title>最终用户许可协议</title> <author>zyc</author> <author>JingLi</author> <category>About</category> <category>About</category> <category>EULA</category> <category>Policy</category> <category>Policy</category> <description>&lt;h1&gt;最终用户许可协议&lt;/h1&gt;&lt;p&gt;!!! info &#34;最后修订&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;本协议最后修订于2022年02月14日。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;!!! error &#34;&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;感谢您使用我们所提供的内容。我们相信，计算机科学使这个世界更美好。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本最终用户许可协议（以下简称本协议）是您（个人或实体）与我们（Zhiyuan Chen...&lt;/p&gt;</description><link>https://zyc.ai/about/eula/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/eula/</guid> </item> <item> <title>隐私声明</title> <author>zyc</author> <category>About</category> <category>About</category> <category>Policy</category> <category>Policy</category> <category>Privacy</category> <description>&lt;h1&gt;隐私声明&lt;/h1&gt;&lt;p&gt;!!! info &#34;最后修订&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;本声明最后修订于2022年02月28日。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;!!! error &#34;&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;我们深知，隐私权是一项基本人权。我们相信通过创新和执行能够为您的隐私权利提供支持，而且在设计技术时也会将这些权利铭记于心。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本隐私声明（以下简称本声明）阐述了您（...&lt;/p&gt;</description><link>https://zyc.ai/about/privacy/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/privacy/</guid> </item> <item> <title>服务协议</title> <author>zyc</author> <author>JingLi</author> <category>About</category> <category>About</category> <category>Policy</category> <category>Policy</category> <category>SA</category> <description>&lt;h1&gt;服务协议&lt;/h1&gt;&lt;p&gt;!!! info &#34;最后修订&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;本协议最后修订于2022年02月14日。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;!!! error &#34;&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;感谢您使用我们所运营的内容。我们相信，计算机科学使这个世界更美好。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本服务协议（以下简称本协议）是您（个人或实体）与我们（Zhiyuan Chen）之间就我们所运...&lt;/p&gt;</description><link>https://zyc.ai/about/sa/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/sa/</guid> </item> <item> <title>禅</title> <author>zyc</author> <category>About</category> <category>About</category> <description>&lt;h1&gt;index&lt;/h1&gt;&lt;p&gt;Beautiful is better than ugly.&lt;/p&gt;&lt;p&gt;Explicit is better than implicit.&lt;/p&gt;&lt;p&gt;Simple is better than complex.&lt;/p&gt;&lt;p&gt;Complex is better than complicated.&lt;/p&gt;&lt;p&gt;Flat is bett...&lt;/p&gt;</description><link>https://zyc.ai/about/zen/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/about/zen/</guid> </item> <item> <title>算法（Algorithm）</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;算法（Algorithm）&lt;/h1&gt;&lt;p&gt;我们都知道，计算机科学属于应用数学的分支。算法，自然是计算机科学最重要的一部分。那么，什么是算法呢？&lt;/p&gt;&lt;p&gt;Algorithm（算法），源自于古法语单词Algorisme，原意是阿拉伯数字系统。这和我们今天所说的算法自然有着本质上的区别。通常情况下，我们将算法定义为：&lt;/p&gt;&lt;p&gt;!!! qu...&lt;/p&gt;</description><link>https://zyc.ai/algorithm/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/</guid> </item> <item> <title>复杂度</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;复杂度&lt;/h1&gt;&lt;p&gt;算法复杂度是衡量一个算法优劣的金标准。它可以分为 &lt;strong&gt;时间复杂度&lt;/strong&gt; 和 &lt;strong&gt;空间复杂度&lt;/strong&gt; 。时间复杂度表示需要多久去计算，空间复杂度则表示需要多少内存来完成计算。由于目前计算机技术的发展，空间复杂度的重要性越来越低，而时间复杂度的重要性越来越高，所以当我们提到复杂度的时候，一般都表示时间复杂度。...&lt;/p&gt;</description><link>https://zyc.ai/algorithm/complexity/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/complexity/</guid> </item> <item> <title>分治法（Divide and Conquer）</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;分治法（Divide and Conquer）&lt;/h1&gt;&lt;p&gt;!!! note &#34;分治法&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;分治，分而治之也。将一个问题转化为两个或更多的相同或相似的子问题，直到最后的子问题可以简单的直接求解。此时，原问题的解即子问题的解的合并。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分治法在算法当中可以说拥有最为广泛的应用。举例来说，乘法作...&lt;/p&gt;</description><link>https://zyc.ai/algorithm/divide%26conquer/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/divide%26conquer/</guid> </item> <item> <title>多项式（Polynomial）</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;多项式（Polynomial）&lt;/h1&gt;&lt;p&gt;在此前的文章当中我们通过n位数乘法运算简要的介绍了算法复杂度的计算。在本文当中我们将对多项式的计算（evaluation）、加法（addition）和乘法（multiplication）提出算法。&lt;/p&gt;&lt;p&gt;!!! important &#34;多项式&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;由变量与系数通过有限次加减...&lt;/code&gt;&lt;/pre&gt;</description><link>https://zyc.ai/algorithm/polynomial/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/polynomial/</guid> </item> <item> <title>递推方程</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;递推方程（Recurrence Relation）&lt;/h1&gt;&lt;p&gt;!!! note &#34;递推方程（递推关系）&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;当一个或多个初始项被给出时，递归地定义一序列或一个多维数组的值的方程。序列或数组的新项被定义为之前项的一个方程。&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;递推关系在算法当中非常常见。我们通常将递推关系的算法称作递归算法。在本章的...&lt;/p&gt;</description><link>https://zyc.ai/algorithm/recurrence_relation/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/recurrence_relation/</guid> </item> <item> <title>变治法（Transform and Conquer）</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;变治法（Transform and Conquer）&lt;/h1&gt;&lt;p&gt;顾名思义，变治法由两个步骤构成。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;变换问题&lt;/li&gt;&lt;li&gt;解决变换后的问题&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;理所当然的，变换后的问题应该更容易被解决。那，有哪些变换呢？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;实例化简（Instance simplification）&lt;/li&gt;&lt;li&gt;表现改变（Representation Chan...&lt;/li&gt;&lt;/ul&gt;</description><link>https://zyc.ai/algorithm/transform%26conquer/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/transform%26conquer/</guid> </item> <item> <title>树</title> <author>zyc</author> <category>Algorithm</category> <category>Algorithm</category> <description>&lt;h1&gt;树（Tree）&lt;/h1&gt;&lt;p&gt;!!! note &#34;树&#34;&lt;/p&gt;&lt;p&gt;树是一种由n个节点构成的树形结构。&lt;/p&gt;&lt;p&gt;与生物学意义上的树不太相同，对于数据结构意义上的树来说，树的根在顶部，叶子则在底部。数据都存储在树的节点当中，节点除了数据之外还存储指向其父节点和子节点的指针--这和双向链表非常相似。通常，一个树只有一个父节点，但可能...&lt;/p&gt;</description><link>https://zyc.ai/algorithm/tree/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/algorithm/tree/</guid> </item> <item> <title>Docker</title> <author>zyc</author> <category>Docker</category> <category>Docker</category> <category>容器化</category> <description>&lt;h1&gt;Docker&lt;/h1&gt;&lt;p&gt;Docker，作为目前最流行的应用容器引擎，已经在全世界当中被广泛使用。&lt;/p&gt;&lt;p&gt;通过移除访客系统（Guest OS）与硬件虚拟化层，Docker得以在性能上远超传统的虚拟机。与此同时，他还提供了更好的硬件兼容性（尤其对于GPU来说）。而Docker Swarm和以Kubernetes为首的容器编排...&lt;/p&gt;</description><link>https://zyc.ai/container/docker/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/container/docker/</guid> </item> <item> <title>命令行接口</title> <author>zyc</author> <category>Docker</category> <category>Docker</category> <category>容器化</category> <description>&lt;h1&gt;Docker命令行接口&lt;/h1&gt;&lt;p&gt;在前一篇文章当中，我们运行了最简单的hello-world程序。在本文当中，我将介绍常用的Docker命令。需要注意的是，为了避免重复的讨论，我们将会在一个命令当中使用尽可能多的参数。实际生产环境当中，这些参数可能无需用到。&lt;/p&gt;&lt;h2&gt;创建容器&lt;/h2&gt;&lt;p&gt;首先，让我们再创建一个容器。&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://zyc.ai/container/docker/command_line_interface/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/container/docker/command_line_interface/</guid> </item> <item> <title>Dockerfile</title> <author>zyc</author> <category>Docker</category> <category>Docker</category> <category>容器化</category> <description>&lt;h1&gt;Dockerfile&lt;/h1&gt;&lt;p&gt;Dockerfile可以说是Docker最重要的一部分。Docker依据Dockerfile的描述构建出一个又一个Docker镜像，使之得以运行。也是因此，我们可以将软件交付从数十GiB的代码缩减到数百KiB。&lt;/p&gt;&lt;p&gt;本文将简要介绍Dockerfile的内容，并将对nvidia/cuda:...&lt;/p&gt;</description><link>https://zyc.ai/container/docker/dockerfile/</link> <pubDate>Sun, 28 Apr 2024 17:08:58 +0000</pubDate><source url="https://zyc.ai/feed_rss_updated.xml">Zhiyuan Chen</source><guid isPermaLink="true">https://zyc.ai/container/docker/dockerfile/</guid> </item> </channel></rss>